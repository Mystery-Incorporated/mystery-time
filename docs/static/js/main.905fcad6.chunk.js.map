{"version":3,"sources":["App.js","index.js"],"names":["App","props","_isMounted","timeInterval","state","currentTime","Date","rst","jst","sst","explainRST","explainJST","explainSST","this","clearInterval","rand","getRandomInt","console","log","updateTimes","interval","setInterval","min","max","Math","ceil","floor","random","curr","setMinutes","getMinutes","getHours","getSeconds","setHours","setSeconds","_sst","setState","num","slice","exact","path","component","ResponsiveContext","Consumer","size","Box","width","height","direction","justify","align","gap","Text","textAlign","formatNum","onMouseEnter","onMouseLeave","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.905fcad6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Link, Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport { \r\n    Box,\r\n    Text,\r\n    ResponsiveContext\r\n} from 'grommet';\r\n\r\n\r\nclass App extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.timeInterval = null;\r\n        this.state = {\r\n            currentTime: new Date(),\r\n            rst: new Date(),\r\n            jst: new Date(),\r\n            sst: new Date(),\r\n            explainRST: false,\r\n            explainJST: false,\r\n            explainSST: false,\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n        clearInterval(this.timeInterval);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n        if (this._isMounted) {\r\n            let rand = this.getRandomInt(0, 100);\r\n            console.log(rand);\r\n            // probabilistic time\r\n            let sst = new Date();\r\n            if (rand < 35) {\r\n                sst = null;\r\n            }\r\n\r\n            this.updateTimes(sst);\r\n            this.interval = setInterval(() => this.updateTimes(this.state.sst), 1000);\r\n        }\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    updateTimes(sst) {\r\n        \r\n        let curr = new Date();\r\n\r\n        // jana standard time, +45 mins\r\n        let jst = new Date();\r\n        jst.setMinutes(jst.getMinutes() + 45);\r\n\r\n        // rachel standard time 11pm or 1am\r\n        let rst = new Date();\r\n        if ((rst.getHours() > 1 && rst.getHours() < 23) || (rst.getHours() == 1 && (rst.getSeconds() > 0 || rst.getMinutes() > 0))) {\r\n            rst.setHours(23);\r\n            rst.setMinutes(0);\r\n            rst.setSeconds(0);\r\n        }\r\n        else {\r\n            rst.setHours(1);\r\n            rst.setMinutes(0);\r\n            rst.setSeconds(0); \r\n        }\r\n\r\n        // probabilistic time\r\n        let _sst = new Date();\r\n        if (sst) {\r\n            _sst.setHours(_sst.getHours() + 1)\r\n        }\r\n        else {\r\n            _sst = null;\r\n        }\r\n\r\n        this.setState({\r\n            currentTime: curr,\r\n            jst: jst,\r\n            rst: rst,\r\n            sst: _sst\r\n        });\r\n    }\r\n\r\n    formatNum(num) {\r\n        return (\"0\" + num).slice(-2)\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={() => \r\n                        <ResponsiveContext.Consumer>\r\n                            {size =>\r\n                                <Box\r\n                                    width=\"100vw\"\r\n                                    height=\"100vh\"\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    align=\"center\"\r\n                                    gap=\"medium\"\r\n                                >\r\n                                    <Box\r\n                                        direction=\"column\"\r\n                                        justify=\"center\"\r\n                                        align=\"center\"\r\n                                    >\r\n                                        <Text textAlign=\"center\" size=\"55px\">{this.formatNum(this.state.currentTime.getHours())}:{this.formatNum(this.state.currentTime.getMinutes())}:{this.formatNum(this.state.currentTime.getSeconds())} EST </Text>\r\n                                    </Box>\r\n                                    <Box\r\n                                        direction=\"column\"\r\n                                        justify=\"center\"\r\n                                        align=\"center\"\r\n                                        onMouseEnter={() => {this.setState({explainRST: true})}} onMouseLeave={() => {this.setState({explainRST: false})}}\r\n                                    >\r\n                                        {this.state.explainRST &&\r\n                                            <Text textAlign=\"center\" size=\"25px\">Rachel Standard Time: 11:00 PM or 1:00 AM</Text>\r\n                                        }\r\n                                        <Text textAlign=\"center\" size=\"55px\" >{this.state.rst ? (this.formatNum(this.state.rst.getHours())+':'+this.formatNum(this.state.rst.getMinutes())+':' + this.formatNum(this.state.rst.getSeconds()) + ' RST') : \"hmmm\"}</Text>\r\n                                    </Box>\r\n                                    <Box\r\n                                        direction=\"column\"\r\n                                        justify=\"center\"\r\n                                        align=\"center\"\r\n                                        onMouseEnter={() => {this.setState({explainSST: true})}} onMouseLeave={() => {this.setState({explainSST: false})}}\r\n                                    >\r\n                                        {this.state.explainSST &&\r\n                                            <Text textAlign=\"center\" size=\"25px\">Soaad Standard Time: probabilistic time</Text>\r\n                                        }\r\n                                        <Text textAlign=\"center\" size=\"55px\">{this.state.sst ? (this.formatNum(this.state.sst.getHours())+':'+this.formatNum(this.state.sst.getMinutes())+':' + this.formatNum(this.state.sst.getSeconds()) + ' SST') : \"no-show SST\"}</Text>\r\n                                    </Box>\r\n                                    <Box\r\n                                        direction=\"column\"\r\n                                        justify=\"center\"\r\n                                        align=\"center\"\r\n                                        onMouseEnter={() => {this.setState({explainJST: true})}} onMouseLeave={() => {this.setState({explainJST: false})}}\r\n                                    >\r\n                                        {this.state.explainJST &&\r\n                                            <Text textAlign=\"center\" size=\"25px\">Jana Standard Time: +45mins</Text>\r\n                                        }\r\n                                        <Text textAlign=\"center\" size=\"55px\">{this.state.jst ? (this.formatNum(this.state.jst.getHours())+':'+this.formatNum(this.state.jst.getMinutes())+':' + this.formatNum(this.state.jst.getSeconds()) + ' JST') : \"hmmm\"}</Text>\r\n                                    </Box>\r\n                                    \r\n                        \r\n                                </Box>\r\n                            }\r\n                        </ResponsiveContext.Consumer>\r\n                    }/>                    \r\n                    <Route component={() => \r\n                        <Box\r\n                            width=\"100vw\"\r\n                            height=\"100vh\"\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            align=\"center\"\r\n                        >\r\n                            <Text>Hmmm! This page does not exist :(</Text>\r\n                        </Box>\r\n                    } />                   \r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}